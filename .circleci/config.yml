# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test-and-publish:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: docker:20.10.11
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build and run unit tests
          command: |
            docker build --cache-from=app -t layro01/react-test -f ./client/Dockerfile.dev ./client
            docker run -e CI=true layro01/react-test npm test
      - run:
          name: Build production image
          command: |
            docker build --cache-from=app -t layro01/multi-client ./client
            docker build --cache-from=app -t layro01/multi-nginx ./nginx
            docker build --cache-from=app -t layro01/multi-server ./server
            docker build --cache-from=app -t layro01/multi-worker ./worker
          when: on_success
      - run:
          name: Push production images to Dockerhub
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push layro01/multi-client
            docker push layro01/multi-nginx
            docker push layro01/multi-server
            docker push layro01/multi-worker
          when: on_success
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar            

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test-and-publish-workflow:
    jobs:
      - test-and-publish
